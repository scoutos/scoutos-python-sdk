# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .field_mapping import FieldMapping


class WorkflowTargetConfig(UncheckedBaseModel):
    """
    Configuration specific to workflow targets.
    """

    field_mappings: typing.Optional[typing.List[FieldMapping]] = pydantic.Field(default=None)
    """
    Map webhook data fields to workflow input fields
    """

    default_field_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Default field to receive full webhook payload if no mappings match
    """

    run_mode: typing.Optional[str] = pydantic.Field(default=None)
    """
    How to run the workflow: async or sync
    """

    timeout_seconds: typing.Optional[int] = pydantic.Field(default=None)
    """
    Timeout for sync execution
    """

    verify_token: typing.Optional[str] = pydantic.Field(default=None)
    """
    Token for webhook verification (e.g., Meta hub.verify_token)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
