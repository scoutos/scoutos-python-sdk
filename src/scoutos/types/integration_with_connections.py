# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .integration_auth_type import IntegrationAuthType
from .integration_connection import IntegrationConnection
from .integration_with_connections_id import IntegrationWithConnectionsId


class IntegrationWithConnections(UncheckedBaseModel):
    name: str
    id: IntegrationWithConnectionsId
    auth_client: str
    description: str
    auth_types: typing.List[IntegrationAuthType]
    icon_url: typing.Optional[str] = None
    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    tags: typing.Optional[typing.List[str]] = None
    enabled: typing.Optional[bool] = None
    permissions: typing.Optional[typing.List[typing.Dict[str, typing.Optional[typing.Any]]]] = None
    auth_configs: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    connected: bool
    connections: typing.List[IntegrationConnection]
    existing_auth_client_scope: typing.List[str]
    supports_multiple_connections: bool

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
