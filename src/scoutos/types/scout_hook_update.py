# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .scout_hook_config_http import ScoutHookConfigHttp
from .scout_hook_update_triggering_events_item import ScoutHookUpdateTriggeringEventsItem


class ScoutHookUpdate(UncheckedBaseModel):
    hook_config: typing.Optional[ScoutHookConfigHttp] = None
    name: typing.Optional[str] = None
    description: typing.Optional[str] = None
    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    triggering_events: typing.Optional[typing.List[ScoutHookUpdateTriggeringEventsItem]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
