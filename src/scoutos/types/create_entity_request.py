# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class CreateEntityRequest(UncheckedBaseModel):
    """
    Create request - just type and data
    """

    type: str = pydantic.Field()
    """
    Entity type (e.g., 'todo', 'note', 'task')
    """

    data: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    Entity data
    """

    tags: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Optional tags
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
