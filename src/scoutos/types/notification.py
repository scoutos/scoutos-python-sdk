# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .notification_action import NotificationAction
from .notification_severity import NotificationSeverity
from .notification_type import NotificationType


class Notification(UncheckedBaseModel):
    type: typing.Optional[NotificationType] = None
    severity: typing.Optional[NotificationSeverity] = None
    title: typing.Optional[str] = None
    message: typing.Optional[str] = None
    actions: typing.Optional[typing.List[NotificationAction]] = None
    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
