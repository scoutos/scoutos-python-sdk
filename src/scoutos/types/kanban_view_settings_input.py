# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .card_display_field import CardDisplayField
from .view_filter import ViewFilter


class KanbanViewSettingsInput(UncheckedBaseModel):
    column_visibility: typing.Optional[typing.Dict[str, bool]] = None
    column_order: typing.Optional[typing.List[str]] = None
    column_widths: typing.Optional[typing.Dict[str, int]] = None
    type: typing.Literal["kanban"] = "kanban"
    grouping_column: str
    group_visibility: typing.Optional[typing.Dict[str, bool]] = None
    group_order: typing.Optional[typing.List[str]] = None
    card_display_fields: typing.Optional[typing.List[CardDisplayField]] = None
    card_compact_mode: typing.Optional[bool] = None
    card_image_field: typing.Optional[str] = None
    filters: typing.Optional[typing.List[ViewFilter]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
