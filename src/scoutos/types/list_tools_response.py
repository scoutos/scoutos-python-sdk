# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .tool_details import ToolDetails


class ListToolsResponse(UncheckedBaseModel):
    """
    Response for listing available tools.
    """

    available: typing.List[ToolDetails] = pydantic.Field()
    """
    List of available tools for the organization with full details
    """

    unavailable: typing.List[ToolDetails] = pydantic.Field()
    """
    List of unavailable tools for the organization
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
