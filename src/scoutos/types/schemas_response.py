# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .activity_schema import ActivitySchema


class SchemasResponse(UncheckedBaseModel):
    """
    Response containing all schemas for the organization.
    """

    ok: typing.Optional[bool] = None
    objects: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    Object type schemas
    """

    activities: typing.Dict[str, ActivitySchema] = pydantic.Field()
    """
    Activity type schemas
    """

    activity_rules: typing.Optional[typing.Dict[str, typing.Dict[str, typing.List[str]]]] = pydantic.Field(default=None)
    """
    Context-based activity suggestions
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
