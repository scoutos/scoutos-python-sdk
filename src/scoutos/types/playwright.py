# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .playwright_wait_for_load_state import PlaywrightWaitForLoadState
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Playwright(UncheckedBaseModel):
    scraper_type: typing.Literal["playwright"] = "playwright"
    wait_for_load_state: typing.Optional[PlaywrightWaitForLoadState] = pydantic.Field(default=None)
    """
    Determines when the scraper considers navigation to be finished.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
