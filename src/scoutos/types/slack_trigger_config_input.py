# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .rules_input import RulesInput
from .slack_trigger_config_input_action import SlackTriggerConfigInputAction
from .trigger_status import TriggerStatus


class SlackTriggerConfigInput(UncheckedBaseModel):
    trigger_display_name: typing.Optional[typing.Literal["When message is sent to Slack Channel"]] = None
    trigger_type: typing.Optional[typing.Literal["slack.message"]] = None
    action: SlackTriggerConfigInputAction
    status: typing.Optional[TriggerStatus] = None
    run_conditions: typing.Optional[RulesInput] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
