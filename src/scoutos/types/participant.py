# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .participant_type import ParticipantType


class Participant(UncheckedBaseModel):
    """
    Represents a participant in a session.
    """

    id: str = pydantic.Field()
    """
    Unique identifier for the participant
    """

    type: ParticipantType = pydantic.Field()
    """
    Type of participant, e.g., 'user' or 'ai_agent'
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
